{"version":3,"sources":["constants/index.js","components/UserListItem.js","components/UserList.js","components/EditUserModal.js","App.js","actions/users.js","serviceWorker.js","reducers/users.js","reducers/index.js","index.js","configureStore.js"],"names":["INITIATE_USERS","UPDATE_USER","DELETE_USER","UserListItem","_this$props","this","props","user","onEditToggle","onDelete","react_default","a","createElement","Fragment","className","onClick","name","title","first","last","login","username","gender","email","phone","location","street","city","src","picture","thumbnail","alt","e","id","Component","UserList","users","map","components_UserListItem","defaultProps","EditUserModal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","setState","editingUser","onChange","state","_e$target","target","value","updatedUser","objectSpread","onSubmit","preventDefault","onFormSubmit","display","onModalToggle","for","cell","type","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","method","headers","Content-type","then","resp","json","length","getInitialUserData","addInitialUserData","stop","_callee2","i","_context2","sent","results","forEach","body","JSON","stringify","modalOpened","_ref3","_callee3","_context3","concat","ok","updateUser","_x","apply","arguments","_ref4","_callee4","_context4","stopPropagation","deleteUser","_x2","_x3","_this$state","components_UserList","components_EditUserModal","connect","data","dispatch","payload","Boolean","window","hostname","match","INITIAL_STATE","updateOne","item","deleteOne","updated","filter","toConsumableArray","combineReducers","undefined","action","store","initialState","helpersConfig","enhancer","middleware","thunk","composeWithDevTools","version","composeEnhancers","applyMiddleware","createStore","rootReducer","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7101de5.chunk.js","sourcesContent":["const INITIATE_USERS = 'INITIATE_USERS';\nconst UPDATE_USER = 'UPDATE_USER';\nconst DELETE_USER = 'DELETE_USER';\n\nexport { INITIATE_USERS, UPDATE_USER, DELETE_USER }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass UserListItem extends Component {\n  render() {\n    const { user, onEditToggle, onDelete } = this.props;\n    return (\n      <>\n        <div className=\"userList-row\" onClick={() => onEditToggle(user)}>\n          <div>{user.name.title} {user.name.first} {user.name.last}</div>\n          <div>{user.login.username}</div>\n          <div>{user.gender}</div>\n          <div>{user.email}</div>\n          <div>{user.phone}</div>\n          <div>{user.location.street}, {user.location.city}</div>\n          <div><img src={user.picture.thumbnail} alt=\"user-thumbnail\" /></div>\n          <div><button className=\"button\" onClick={e => onDelete(e, user.id)}>Delete</button></div>\n        </div>\n      </>\n    );\n  }\n}\n\nUserListItem.propTypes = {\n  user: PropTypes.shape({}),\n  onEditToggle: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default UserListItem;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport UserListItem from './UserListItem';\n\nclass UserList extends Component {\n  render() {\n    const { users, onEditToggle, onDelete } = this.props;\n    return (\n      <div className=\"userList\">\n        <div className=\"userList-row userList-header\">\n          <div>Full name</div>\n          <div>Username</div>\n          <div>Gender</div>\n          <div>Email</div>\n          <div>Phone</div>\n          <div>Location</div>\n          <div>Photo</div>\n          <div />\n        </div>\n        {users.map(user =>\n          <UserListItem user={user} onEditToggle={onEditToggle} onDelete={onDelete}/>\n        )}\n      </div>\n    );\n  }\n}\n\nUserList.propTypes = {\n  users: PropTypes.array,\n  onEditToggle: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nUserList.defaultProps = {\n  users: [],\n};\n\nexport default UserList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditUserModal extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  }\n\n  componentWillMount = () => {\n    this.setState({\n      user: this.props.editingUser,\n    })\n  }\n\n  onChange = e => {\n    const { user } = this.state;\n    const { name, value } = e.target;\n\n    const updatedUser = {\n      ...user,\n    }\n    if (name === 'title' || name === 'first' || name === 'last') {\n      updatedUser.name[name] = value;\n    } else if (name === 'street' || name === 'city' || name === 'state') {\n      updatedUser.location[name] = value;\n    } else {\n      updatedUser[name] = value;\n    }\n\n    this.setState({\n      user: updatedUser,\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { user } = this.state;\n    this.props.onFormSubmit(user);\n  }\n\n  render() {\n    const { display, onModalToggle } = this.props;\n    const { user } = this.state;\n\n    if (!display) {\n      return null;\n    }\n\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-inner\">\n          <form className=\"form\" onSubmit={this.onSubmit}>\n            <div className=\"inner\">\n\n              <label for=\"title\">Title</label>\n              <input name=\"title\" value={user.name.title} onChange={this.onChange} />\n\n              <label for=\"first\">First name</label>\n              <input name=\"first\" value={user.name.first} onChange={this.onChange} />\n\n              <label for=\"last\">Last name</label>\n              <input name=\"last\" value={user.name.last} onChange={this.onChange} />\n\n              <label for=\"email\">Email</label>\n              <input name=\"email\" value={user.email} onChange={this.onChange} />\n\n              <label for=\"phone\">Phone</label>\n              <input name=\"phone\" value={user.phone} onChange={this.onChange} />\n\n              <label for=\"cell\">Cell</label>\n              <input name=\"cell\" value={user.cell} onChange={this.onChange} />\n\n              <label for=\"street\">Street</label>\n              <input name=\"street\" value={user.location.street} onChange={this.onChange} />\n\n              <label for=\"city\">City</label>\n              <input name=\"city\" value={user.location.city} onChange={this.onChange} />\n\n              <label for=\"state\">State</label>\n              <input name=\"state\" value={user.location.state} onChange={this.onChange} />\n\n              <button type=\"submit\" className=\"button\">Update user</button>\n            </div>\n          </form>\n\n          <div className=\"modal-close\" onClick={onModalToggle}>X</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditUserModal.propTypes = {\n  display: PropTypes.bool.isRequired,\n  editingUser: PropTypes.shape({}).isRequired,\n  onModalToggle: PropTypes.func.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default EditUserModal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// styles\nimport './App.scss';\n\n// redux\nimport { addInitialUserData, updateUser, deleteUser } from './actions/users';\n\n// components\nimport UserList from './components/UserList';\nimport EditUserModal from './components/EditUserModal';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      modalOpened: false,\n      editingUser: {},\n      users: [],\n    }\n  }\n\n  componentWillMount = async () => {\n    let users = [];\n    await fetch('http://localhost:3001/users', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(resp => {\n        if (!resp.length) {\n          return this.getInitialUserData();\n        }\n        this.setState({\n          users: resp,\n        })\n        users = resp;\n      })\n\n    this.props.addInitialUserData(users);\n  }\n\n  getInitialUserData = async () => {\n    const users = await fetch('https://randomuser.me/api/?results=10')\n      .then(resp => resp.json());\n\n    let i = 1;\n    users.results.forEach(user => {\n      user.id = i;\n      i++\n    })\n\n    await fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(users.results)\n    });\n\n    this.props.addInitialUserData(users);\n  }\n\n  onEditToggle = user => {\n    this.setState({\n      modalOpened: !this.state.modalOpened,\n      editingUser: user,\n    })\n  }\n\n  onFormSubmit = async user => {\n    const response = await fetch(`http://localhost:3001/users/${user.id}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(user),\n    })\n\n    if (response.ok) {\n      this.props.updateUser(user);\n      this.setState({\n        modalOpened: false,\n      });\n    }\n  }\n\n  onDelete = async (e, id) => {\n    e.stopPropagation();\n\n    await fetch(`http://localhost:3001/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n    })\n    this.props.deleteUser(id);\n  }\n\n  render() {\n    const { modalOpened, editingUser } = this.state;\n    const { users } = this.props;\n\n    if (!users.length) {\n      return <noscript />;\n    }\n    return (\n      <div className=\"App\">\n        <UserList users={users} onEditToggle={this.onEditToggle} onDelete={this.onDelete} />\n        {modalOpened && <EditUserModal display={modalOpened} editingUser={editingUser} onModalToggle={this.onEditToggle} onFormSubmit={this.onFormSubmit} />}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({})\n  ).isRequired\n}\n\nApp.defaultProps = {\n  users: [],\n}\n\nconst mapState = state => {\n  return { users: state.users.data };\n}\n\nexport default connect(mapState, {\n  addInitialUserData, updateUser, deleteUser\n})(App);\n","import {\n    INITIATE_USERS,\n    UPDATE_USER,\n    DELETE_USER,\n} from '../constants';\n\nfunction addInitialUserData(users) {\n    return dispatch => {\n        dispatch({\n            type: INITIATE_USERS,\n            payload: users\n        });\n    }\n}\n\nfunction updateUser(user) {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_USER,\n            payload: user\n        });\n    }\n}\n\nfunction deleteUser(id) {\n    return dispatch => {\n        dispatch({\n            type: DELETE_USER,\n            payload: id\n        });\n    }\n}\n\nexport { addInitialUserData, updateUser, deleteUser };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  INITIATE_USERS,\n  UPDATE_USER,\n  DELETE_USER,\n} from '../constants';\n\nconst INITIAL_STATE = { users: [] };\n\nconst updateOne = (data, payload) => {\n  return data.map(item => {\n    if (item.id !== payload.id) {\n      return item;\n    }\n    return {\n      ...item,\n      ...payload,\n    };\n  });\n}\n\nconst deleteOne = (data, payload) => {\n  const updated = data.filter(user => user.id !== payload);\n\n  return [...updated];\n}\n\nexport default function users(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case INITIATE_USERS:\n      return { data: action.payload };\n    case UPDATE_USER:\n      return {\n        data: updateOne(state.data, action.payload)\n      }\n    case DELETE_USER:\n      return {\n        ...state,\n        data: deleteOne(state.data, action.payload)\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport users from './users';\n\nexport default combineReducers({\n    users\n});","import React from 'react';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { name, version } from '../package.json';\nimport rootReducer from './reducers';\n\nexport default function configureStore(initialState, helpersConfig) {\n  const middleware = [thunk];\n\n  let enhancer;\n  const composeEnhancers = composeWithDevTools({\n    name: `${name}@${version}`,\n  });\n\n  enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  return store;\n}\n"],"sourceRoot":""}